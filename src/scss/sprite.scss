/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$coocoon-ahcoon-name: 'coocoon_ahcoon';
$coocoon-ahcoon-x: 1620px;
$coocoon-ahcoon-y: 524px;
$coocoon-ahcoon-offset-x: -1620px;
$coocoon-ahcoon-offset-y: -524px;
$coocoon-ahcoon-width: 162px;
$coocoon-ahcoon-height: 239px;
$coocoon-ahcoon-total-width: 1944px;
$coocoon-ahcoon-total-height: 1048px;
$coocoon-ahcoon-image: '/images/sprite.png';
$coocoon-ahcoon: (1620px, 524px, -1620px, -524px, 162px, 239px, 1944px, 1048px, '/images/sprite.png', 'coocoon_ahcoon', );
$coocoon-ahcoon-2x-name: 'coocoon_ahcoon@2x';
$coocoon-ahcoon-2x-x: 1296px;
$coocoon-ahcoon-2x-y: 524px;
$coocoon-ahcoon-2x-offset-x: -1296px;
$coocoon-ahcoon-2x-offset-y: -524px;
$coocoon-ahcoon-2x-width: 324px;
$coocoon-ahcoon-2x-height: 478px;
$coocoon-ahcoon-2x-total-width: 1944px;
$coocoon-ahcoon-2x-total-height: 1048px;
$coocoon-ahcoon-2x-image: '/images/sprite.png';
$coocoon-ahcoon-2x: (1296px, 524px, -1296px, -524px, 324px, 478px, 1944px, 1048px, '/images/sprite.png', 'coocoon_ahcoon@2x', );
$coocoon-brand-name: 'coocoon_brand';
$coocoon-brand-x: 1620px;
$coocoon-brand-y: 763px;
$coocoon-brand-offset-x: -1620px;
$coocoon-brand-offset-y: -763px;
$coocoon-brand-width: 290px;
$coocoon-brand-height: 66px;
$coocoon-brand-total-width: 1944px;
$coocoon-brand-total-height: 1048px;
$coocoon-brand-image: '/images/sprite.png';
$coocoon-brand: (1620px, 763px, -1620px, -763px, 290px, 66px, 1944px, 1048px, '/images/sprite.png', 'coocoon_brand', );
$coocoon-brand-2x-name: 'coocoon_brand@2x';
$coocoon-brand-2x-x: 1620px;
$coocoon-brand-2x-y: 829px;
$coocoon-brand-2x-offset-x: -1620px;
$coocoon-brand-2x-offset-y: -829px;
$coocoon-brand-2x-width: 290px;
$coocoon-brand-2x-height: 66px;
$coocoon-brand-2x-total-width: 1944px;
$coocoon-brand-2x-total-height: 1048px;
$coocoon-brand-2x-image: '/images/sprite.png';
$coocoon-brand-2x: (1620px, 829px, -1620px, -829px, 290px, 66px, 1944px, 1048px, '/images/sprite.png', 'coocoon_brand@2x', );
$coocoon-hero-name: 'coocoon_hero';
$coocoon-hero-x: 1296px;
$coocoon-hero-y: 0px;
$coocoon-hero-offset-x: -1296px;
$coocoon-hero-offset-y: 0px;
$coocoon-hero-width: 648px;
$coocoon-hero-height: 524px;
$coocoon-hero-total-width: 1944px;
$coocoon-hero-total-height: 1048px;
$coocoon-hero-image: '/images/sprite.png';
$coocoon-hero: (1296px, 0px, -1296px, 0px, 648px, 524px, 1944px, 1048px, '/images/sprite.png', 'coocoon_hero', );
$coocoon-hero-2x-name: 'coocoon_hero@2x';
$coocoon-hero-2x-x: 0px;
$coocoon-hero-2x-y: 0px;
$coocoon-hero-2x-offset-x: 0px;
$coocoon-hero-2x-offset-y: 0px;
$coocoon-hero-2x-width: 1296px;
$coocoon-hero-2x-height: 1048px;
$coocoon-hero-2x-total-width: 1944px;
$coocoon-hero-2x-total-height: 1048px;
$coocoon-hero-2x-image: '/images/sprite.png';
$coocoon-hero-2x: (0px, 0px, 0px, 0px, 1296px, 1048px, 1944px, 1048px, '/images/sprite.png', 'coocoon_hero@2x', );
$spritesheet-width: 1944px;
$spritesheet-height: 1048px;
$spritesheet-image: '/images/sprite.png';
$spritesheet-sprites: ($coocoon-ahcoon, $coocoon-ahcoon-2x, $coocoon-brand, $coocoon-brand-2x, $coocoon-hero, $coocoon-hero-2x, );
$spritesheet: (1944px, 1048px, '/images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
